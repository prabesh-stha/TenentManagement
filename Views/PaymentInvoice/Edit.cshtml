@model TenentManagement.Models.Payment.PaymentInvoiceModel
@using TenentManagement.Services.Utilities;
@{
    ViewData["Title"] = "Edit Invoice";
    bool all = ViewData["All"] as bool? ?? false;
}
@{
    var utilityTypes = new[]
    {
        new { Id = 1, Name = "Electricity", Unit = "kWh" },
        new { Id = 2, Name = "Water", Unit = "m³" },
        new { Id = 3, Name = "Internet", Unit = "" }
    };
}
<div class="container-fluid py-5">
    <div class="card shadow-lg mx-auto" style="max-width: 900px;">
        <div class="card-header bg-primary text-white py-4">
            <h1 class="h4 mb-0 text-center d-flex flex-column align-items-center">
                <span class="d-inline-flex align-items-center justify-content-center bg-opacity-25 bg-info text-white rounded-circle mb-2" style="width: 50px; height: 50px;">
                    <i class="bi bi-receipt"></i>
                </span>
                <span>Tenant Management System</span>
                <span class="mt-2 mb-0 text-center">
                    <i class="bi bi-pencil-square me-2"></i>Edit Invoice
                </span>
            </h1>
        </div>

        <div class="card-body p-4">
            <form method="post" asp-action="Edit" asp-controller="PaymentInvoice" class="needs-validation" novalidate>
                <input type="hidden" asp-for="UnitId" />
                <input type="hidden" asp-for="RenterId" />
                <input type="hidden" asp-for="OwnerId" />
                <input type="hidden" asp-for="FromMonth" id="FromMonth" />
                <input type="hidden" asp-for="ToMonth" id="ToMonth" />
                <input type="hidden" name="all" value="@all.ToString()" />

                <div class="row gx-5">
                    <!-- Left Column - Rent Information -->
                    <div class="col-lg-7">
                        <div class="border-end pe-4">
                            <h5 class="text-uppercase text-muted mb-3 fw-bold border-bottom pb-2">
                                <i class="bi bi-house me-2"></i>Rent Details
                            </h5>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label small text-muted">From Month</label>
                                        <input type="text" class="form-control"
                                               value="@Model.FromMonth.ToString("yyyy MMMM")" readonly />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label small text-muted">To Month</label>
                                        <input type="text" class="form-control"
                                               value="@Model.ToMonth.ToString("yyyy MMMM")" readonly />
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="DueDate" class="form-label">Due Date *</label>
                                        <input asp-for="DueDate" type="date" class="form-control" id="DueDate" />
                                        <span asp-validation-for="DueDate" class="text-danger small"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label small text-muted">Monthly Amount</label>
                                        <div class="input-group">
                                            <span class="input-group-text">Rs</span>
                                            <input asp-for="AmountPerMonth" class="form-control" id="AmountPerMonth" readonly />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3 bg-light p-3 rounded">
                                <label class="form-label small text-muted">Total Rent</label>
                                <div class="input-group">
                                    <span class="input-group-text">Rs</span>
                                    <input asp-for="AmountDue" type="text" class="form-control fw-bold fs-5" id="TotalAmountDisplay" readonly />
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Column - Utility Bills -->
                    <div class="col-lg-5">
                        <h5 class="text-uppercase text-muted mb-3 fw-bold border-bottom pb-2">
                            <i class="bi bi-lightning-charge me-2"></i>Utility Bills
                        </h5>

                        @for (int i = 0; i < utilityTypes.Length; i++)
                        {
                            var utility = utilityTypes[i];
                            var utilityBill = Model.UtilityBills?.FirstOrDefault(ub => ub.UtilityTypeId == utility.Id);
                            var isInternet = utility.Id == 3;

                            <div class="mb-3 utility-bill" data-utility-type="@utility.Id">
                                <div class="d-flex justify-content-between align-items-center mb-1">
                                    <label class="form-label small text-muted fw-bold">
                                        @utility.Name @(!string.IsNullOrEmpty(utility.Unit) ? $"({utility.Unit})" : "")
                                    </label>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input utility-toggle"
                                               type="checkbox"
                                               data-utility-type="@utility.Id"
                                               @(utilityBill != null ? "checked" : "")>
                                    </div>
                                </div>

                                <div class="row g-2">
                                    @if (!isInternet)
                                    {
                                        <div class="col-6">
                                            <label class="form-label small text-muted">Consumed Units</label>
                                            <input type="number" step="0.01" min="0"
                                                   class="form-control utility-consumed"
                                                   data-utility-type="@utility.Id"
                                                   name="UtilityBills[@i].ConsumedUnit"
                                                   value="@utilityBill?.ConsumedUnit"
                                                   @(utilityBill == null ? "disabled" : "") />
                                        </div>
                                    }
                                    <div class="@(isInternet ? "col-12" : "col-6")">
                                        <label class="form-label small text-muted">Amount</label>
                                        <div class="input-group">
                                            <span class="input-group-text">Rs</span>
                                            <input type="number" step="0.01" min="0"
                                                   class="form-control utility-amount"
                                                   data-utility-type="@utility.Id"
                                                   name="UtilityBills[@i].Amount"
                                                   value="@utilityBill?.Amount"
                                                   @(utilityBill == null ? "disabled" : "") />
                                        </div>
                                    </div>
                                </div>
                                    <input type="hidden"
                                           name="UtilityBills[@i].UtilityTypeId"
                                           value="@utility.Id" />
                            </div>
                        }

                        <div class="mt-3 bg-light p-3 rounded">
                            <label class="form-label small text-muted">Total Utilities</label>
                            <div class="input-group">
                                <span class="input-group-text">Rs</span>
                                <input type="text" class="form-control" id="TotalUtilitiesDisplay"
                                       value="@Model.UtilityBills?.Sum(ub => ub.Amount).ToString("0.00")" readonly />
                            </div>
                        </div>
                    </div>
                </div>
                            <div class="row mb-3 mt-4 border-top pt-3">
                <div class="col-md-12">
                    <div class="d-flex justify-content-between align-items-center bg-primary bg-opacity-10 p-3 rounded">
                        <h5 class="mb-0 text-primary">Grand Total</h5>
                        <div class="input-group" style="max-width: 250px;">
                            <span class="input-group-text bg-white">Rs</span>
                                <input type="text" class="form-control fw-bold fs-4 text-end text-primary" id="GrandTotalDisplay"
                                   value="@((Model.AmountDue + (Model.UtilityBills?.Sum(ub => ub.Amount) ?? 0)).ToString("0.00"))" readonly />
                        </div>
                    </div>
                </div>
            </div>
                <div class="row mb-3">
                    <!-- Owner Remarks -->
                    <div class="col-md-6">
                        <div class="card h-100 border-0 shadow-sm">
                            <div class="card-header bg-light d-flex align-items-center">
                                <i class="bi bi-chat-left-text-fill text-primary me-2"></i>
                                <h6 class="mb-0 fw-semibold">Owner Remarks</h6>
                            </div>
                            <div class="card-body p-0">
                                <textarea asp-for="OwnerRemark"
                                          rows="4"
                                          class="form-control border-0 p-3"
                                          style="min-height: 120px; resize: none;"
                                          placeholder="Enter any additional notes or comments..."></textarea>
                            </div>
                        </div>
                    </div>

                    <!-- Renter Remarks -->
                    <div class="col-md-6">
                        <div class="card h-100 border-0 shadow-sm">
                            <div class="card-header bg-light d-flex align-items-center">
                                <i class="bi bi-chat-left-text-fill text-primary me-2"></i>
                                <h6 class="mb-0 fw-semibold">Renter Remarks</h6>
                            </div>
                            <div class="card-body p-0">
                                <textarea asp-for="RenterRemark"
                                          rows="4"
                                          class="form-control border-0 p-3"
                                          style="min-height: 120px; resize: none;"
                                          placeholder="No comment" disabled></textarea>
                            </div>
                        </div>
                    </div>
                </div>

                
                <div class="mb-3">
                    <label asp-for="PaymentMethodId" class="form-label small text-muted">Payment Method *</label>
                    <select asp-for="PaymentMethodId" class="form-select" required>
                        @foreach (var method in Model.PaymentMethods)
                        {
                            <option value="@method.Id" selected="@(method.Id == Model.PaymentMethodId)">
                                @method.PaymentMethod.ToTitleCase()
                            </option>
                        }
                    </select>
                    <span asp-validation-for="PaymentMethodId" class="text-danger small"></span>
                </div>

                <!-- Payment Proof Section -->
                @if (Model.PaymentProof != null)
                {
                    <div class="mb-4">
                        <label class="form-label small text-muted">@Model.PaymentMethod.ToTitleCase() Payment Proof</label>
                        <div class="border rounded p-3 bg-light">
                            <div class="text-center mb-3">
                                <img src="@Model.PaymentProof.Base64Image"
                                     class="img-fluid rounded shadow-sm"
                                     style="max-height: 300px;"
                                     alt="@Model.PaymentMethod.ToTitleCase() Payment Proof" />
                            </div>
                            <div class="d-flex justify-content-center gap-2">
                                <button type="button" class="btn btn-sm btn-outline-primary"
                                        data-bs-toggle="modal"
                                        data-bs-target="#proofModal">
                                    <i class="bi bi-zoom-in me-1"></i> View Larger
                                </button>
                                <a href="@Model.PaymentProof.Base64Image"
                                   download="payment-proof-@DateTime.UtcNow.ToString("yyyyMMdd")"
                                   class="btn btn-sm btn-outline-secondary">
                                    <i class="bi bi-download me-1"></i> Download
                                </a>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="bi bi-image text-muted display-6"></i>
                        <p class="text-muted mt-2">No payment proof provided</p>
                    </div>
                }

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="StatusId" class="form-label small text-muted">Payment Status *</label>
                        <div class="input-group">
                            <select asp-for="StatusId" class="form-select" id="statusSelect" required>
                                @foreach (var status in Model.PaymentStatuses)
                                {
                                    <option value="@status.Id" selected="@(status.Id == Model.StatusId)">
                                        @status.Status.ToTitleCase()
                                    </option>
                                }
                            </select>
                            <span class="input-group-text" id="statusIcon">
                                <i class="bi bi-question-circle-fill text-warning"></i>
                            </span>
                        </div>
                        <span asp-validation-for="StatusId" class="text-danger small"></span>
                    </div>

                    <div class="form-group col-md-6">
                        <label class="form-label small text-muted" asp-for="IsVerified">Valid Payment?</label>
                        <div class="mt-2">
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" asp-for="IsVerified" value="true" id="verifiedYes" />
                                <label class="form-check-label" for="verifiedYes">Yes</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" asp-for="IsVerified" value="false" id="verifiedNo" checked />
                                <label class="form-check-label" for="verifiedNo">No</label>
                            </div>
                            <span class="ms-2" id="verifiedIcon">
                                <i class="bi bi-question-circle-fill text-warning"></i>
                            </span>
                        </div>
                    </div>
                </div>

                <div class="alert alert-info mb-3 d-flex align-items-start" id="validationAlert" style="border-left: 4px solid #0dcaf0;">
                    <div class="pe-3">
                        <i class="bi bi-info-circle-fill alert-info fs-4"></i>
                    </div>
                    <div>
                        <p class="mb-1 fw-bold">Payment Validation Guide</p>
                        <ul class="mb-0" style="list-style-type: none; padding-left: 0;">
                            <li class="d-flex align-items-baseline">
                                <span class="me-2">•</span>
                                <span>Select <span class="badge bg-success">Paid</span> & <span class="badge bg-success">Yes</span> for valid payment</span>
                            </li>
                            <li class="d-flex align-items-baseline">
                                <span class="me-2">•</span>
                                <span>Select <span class="badge bg-danger">Unpaid</span> & <span class="badge bg-danger">No</span> for invalid payment</span>
                            </li>
                        </ul>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary w-100 py-2 mt-3 rounded-corner" id="submitButton">
                        <i class="bi bi-file-earmark-text-fill me-2"></i>Update Invoice
                    </button>
                    @if (all)
                    {
                        <a asp-action="AllInvoice" asp-route-id="@Context.Session.GetInt32("UserId")" class="btn btn-outline-secondary py-2 rounded-corner">
                            <i class="bi bi-arrow-left me-2"></i>Back to Invoices
                        </a>
                    }
                    else
                    {
                        <a asp-action="UnitInvoices" asp-controller="PaymentInvoice" asp-route-id="@Model.UnitId"
                           class="btn btn-outline-secondary py-2 rounded-corner">
                            <i class="bi bi-arrow-left me-2"></i>Back to Invoices
                        </a>
                    }
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Payment Proof Modal -->
<div class="modal fade" id="proofModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="bi bi-receipt me-2"></i> Payment Proof
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-4">
                <div class="d-flex justify-content-center">
                    <img src="@Model.PaymentProof?.Base64Image"
                         class="img-fluid rounded"
                         style="max-height: 70vh;"
                         alt="Payment Proof" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <a href="@Model.PaymentProof?.Base64Image"
                   download="payment-proof-@DateTime.UtcNow.ToString("yyyyMMdd")"
                   class="btn btn-primary">
                    <i class="bi bi-download me-1"></i> Download
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
	<script>
		// Calculate rent total
		function calculateRentTotal() {
			const from = new Date(document.getElementById("FromMonth").value);
			const to = new Date(document.getElementById("ToMonth").value);
			const amount = parseFloat(document.getElementById("AmountPerMonth").value);

			if (!isNaN(from) && !isNaN(to) && !isNaN(amount)) {
				const months = (to.getFullYear() - from.getFullYear()) * 12 + (to.getMonth() - from.getMonth());
				document.getElementById("TotalAmountDisplay").value = (months * amount).toFixed(2);
			}
			calculateGrandTotal();
		}

		function setupUtilityToggles() {
			document.querySelectorAll('.utility-toggle').forEach(toggle => {
				const billSection = toggle.closest('.utility-bill');
                const inputs = billSection.querySelectorAll('input:not(.utility-toggle):not([type="hidden"])');

				// Initialize based on current checked state
				const isChecked = toggle.checked;
				inputs.forEach(input => {
					input.disabled = !isChecked;
				});

				toggle.addEventListener('change', function() {
					inputs.forEach(input => {
						input.disabled = !this.checked;
						if (!this.checked && (input.classList.contains('utility-amount') ||
											 input.classList.contains('utility-consumed'))) {
							input.value = '';
						}
					});
					calculateUtilitiesTotal();
				});

				// Also add event listeners to amount inputs
				billSection.querySelectorAll('.utility-amount').forEach(input => {
					input.addEventListener('input', calculateUtilitiesTotal);
				});
			});

			// Calculate initial total
			calculateUtilitiesTotal();
		}

		// Calculate utilities total
		function calculateUtilitiesTotal() {
			let total = 0;
			document.querySelectorAll('.utility-bill').forEach(bill => {
				const isActive = bill.querySelector('.utility-toggle').checked;
				if (isActive) {
					const amountInput = bill.querySelector('.utility-amount');
					const amount = parseFloat(amountInput.value) || 0;
					total += amount;
				}
			});
			document.getElementById("TotalUtilitiesDisplay").value = total.toFixed(2);
			calculateGrandTotal();
		}

		// Calculate grand total
		function calculateGrandTotal() {
			const rentTotal = parseFloat(document.getElementById("TotalAmountDisplay").value) || 0;
			const utilitiesTotal = parseFloat(document.getElementById("TotalUtilitiesDisplay").value) || 0;
			document.getElementById("GrandTotalDisplay").value = (rentTotal + utilitiesTotal).toFixed(2);
		}

		let initialDueDay = null;

		function calculateDueDate(useInitialDay = false) {
			const to = new Date(document.getElementById("ToMonth").value);
			const dueDateElement = document.getElementById("DueDate");
			let day;

			if (useInitialDay && initialDueDay !== null) {
				day = initialDueDay;
			} else {
				const currentDate = dueDateElement.value ? new Date(dueDateElement.value) : new Date();
				day = currentDate.getDate();
			}

			const minDueDate = new Date(to.getFullYear(), to.getMonth(), day);
			const year = minDueDate.getFullYear();
			const month = String(minDueDate.getMonth() + 1).padStart(2, '0');
			const dayFormatted = String(minDueDate.getDate()).padStart(2, '0');
			const formattedMin = `${year}-${month}-${dayFormatted}`;

			dueDateElement.min = formattedMin;
			if (!dueDateElement.value || new Date(dueDateElement.value) < minDueDate) {
				dueDateElement.value = formattedMin;
			}
		}

		function updateValidationStatus() {
			const statusSelect = document.getElementById('statusSelect');
			const isVerifiedYes = document.getElementById('verifiedYes').checked;
			const statusIcon = document.getElementById('statusIcon');
			const verifiedIcon = document.getElementById('verifiedIcon');
			const button = document.getElementById('submitButton');

			const selectedStatus = statusSelect.options[statusSelect.selectedIndex].text.toLowerCase();

			// Reset icons
			statusIcon.innerHTML = '<i class="bi bi-question-circle-fill text-warning"></i>';
			verifiedIcon.innerHTML = '';

			// Default to disabled
			button.disabled = true;

			if (selectedStatus === 'paid') {
				statusIcon.innerHTML = '<i class="bi bi-check-circle-fill text-success"></i>';
				if (isVerifiedYes) {
					verifiedIcon.innerHTML = '<i class="bi bi-check-circle-fill text-success"></i>';
					button.disabled = false;
				} else {
					verifiedIcon.innerHTML = '<i class="bi bi-x-circle-fill text-danger"></i>';
					button.disabled = true;
				}
			}
			else if (selectedStatus === 'unpaid') {
				statusIcon.innerHTML = '<i class="bi bi-check-circle-fill text-success"></i>';
				if (!isVerifiedYes) {
					verifiedIcon.innerHTML = '<i class="bi bi-check-circle-fill text-success"></i>';
					button.disabled = false;
				} else {
					verifiedIcon.innerHTML = '<i class="bi bi-x-circle-fill text-danger"></i>';
					button.disabled = true;
				}
			}
			else if (selectedStatus === 'pending') {
				button.disabled = true;
			}
		}

		document.addEventListener("DOMContentLoaded", function() {
			setupUtilityToggles();

			if (document.getElementById("DueDate").value) {
				const initialDueDate = new Date(document.getElementById("DueDate").value);
				initialDueDay = initialDueDate.getDate();
			}

			calculateRentTotal();
			calculateUtilitiesTotal();
			calculateDueDate(true);

			document.getElementById('statusSelect').addEventListener('change', updateValidationStatus);
			document.getElementById('verifiedYes').addEventListener('change', updateValidationStatus);
			document.getElementById('verifiedNo').addEventListener('change', updateValidationStatus);

			// Initialize validation status
			updateValidationStatus();
		});
	</script>
}