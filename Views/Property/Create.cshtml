@using TenentManagement.Models.Property
@model PropertyModel

@{
    ViewData["Title"] = "Create Property";
}

<div class="container py-5">
    <div class="card shadow-lg mx-auto rounded-corner" style="max-width: 700px;">
        <div class="card-header bg-primary text-white py-4 rounded-corner-top">
            <h1 class="h4 mb-0 text-center d-flex flex-column align-items-center">
                <span class="d-inline-flex align-items-center justify-content-center bg-opacity-25 bg-info text-white rounded-circle mb-2" style="width: 50px; height: 50px;">
                    <i class="bi bi-house-fill fa-lg"></i>
                </span>
                <span>Tenant Management System</span>
                <span class="mt-2 mb-0 text-center">
                    <i class="bi bi-plus-circle-fill me-2"></i>Create Property
                </span>
            </h1>
        </div>


        <div class="card-body p-4">
            <form asp-action="Create" method="post" enctype="multipart/form-data" class="needs-validation" novalidate data-enable-spinner="true">
                <input type="hidden" asp-for="UserId" id="OwnerId" />
                <div class="mb-4">
                    <label class="form-label small text-muted">Property Image</label>
                    <div class="border rounded p-3 text-center" id="imageUploadArea">
                        <div id="imagePreviewContainer" class="mb-3 d-none">
                            <img id="imagePreview" class="img-fluid rounded" style="max-height: 200px;" />
                            <br />
                            <button type="button" class="btn btn-lg text-danger mt-2" id="removeImageBtn" title="Remove image">
                                <i class="bi bi-x-lg"></i>
                            </button>
                        </div>
                        <div id="uploadPrompt" class="py-4">
                            <i class="bi bi-cloud-upload display-4 text-muted"></i>
                            <p class="mt-2 mb-1">Drag & drop your image here or</p>
                            <input type="file" name="imageFile" id="imageFile" class="d-none" accept="image/*" />
                            <label for="imageFile" class="btn btn-outline-primary">
                                <i class="bi bi-folder2-open"></i> Browse Files
                            </label>
                            <p class="small text-muted mt-2">Supports: JPG, PNG (Max 5MB)</p>
                        </div>
                    </div>
                    <span id="clientFileError" class="text-danger small d-none mt-2"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Name" class="form-label small text-muted">Property Name *</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-type"></i></span>
                        <input asp-for="Name" class="form-control" placeholder="Property Name" required />
                    </div>
                    <span asp-validation-for="Name" class="text-danger small"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label small text-muted">Property Type *</label>
                    <div role="group">
                        @foreach (var type in Model.PropertyTypes)
                        {
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="radio"
                                       asp-for="Type"
                                       value="@type.Id"
                                       id="type_@type.Id"
                                       checked="@(type.Id == Model.PropertyTypes.FirstOrDefault()?.Id ? "checked" : null)"
                                       required />
                                <label class="form-check-label" for="type_@type.Id">
                                    @(type.Name.Length > 0 ? char.ToUpper(type.Name[0]) + type.Name.Substring(1).ToLower() : type.Name)
                                </label>
                            </div>
                        }
                    </div>
                    <span asp-validation-for="Type" class="text-danger small"></span>
                </div>


                <div class="mb-3">
                    <label class="form-label small text-muted">Select Location on Map *</label>
                    <div id="propertyMap"
                         style="height: 300px; border-radius: 10px; margin-bottom: 1rem;"
                         data-map-picker="true"
                         data-latitude="@Model.Latitude"
                         data-longitude="@Model.Longitude"
                         data-address="@Model.Address"
                         data-lat-input="Latitude"
                         data-lng-input="Longitude"
                         data-address-input="Address"></div>
                </div>
                <div class="mb-3">
                    <label asp-for="Address" class="form-label small text-muted">Address *</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-geo-alt-fill"></i></span>
                        <input asp-for="Address" id="Address" class="form-control" placeholder="Property Address" required readonly />
                    </div>
                    <span asp-validation-for="Address" class="text-danger small"></span>
                </div>

                <input type="hidden" asp-for="Latitude" id="Latitude" />
                <input type="hidden" asp-for="Longitude" id="Longitude" />

                <div class="mb-3">
                    <label asp-for="Description" class="form-label small text-muted">Description</label>
                    <textarea asp-for="Description" class="form-control" placeholder="Optional details about the property" rows="3"></textarea>
                    <span asp-validation-for="Description" class="text-danger small"></span>
                </div>

                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary w-100 py-2 mt-4 rounded-corner">
                        <i class="bi bi-plus-circle-fill me-2"></i>Create Property
                    </button>
                    <a asp-action="Index" asp-controller="Home" class="btn btn-outline-secondary py-2 rounded-corner"><i class="bi bi-arrow-left me-2"></i>Back to Property List</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const imageFile = document.getElementById('imageFile');
            const imagePreview = document.getElementById('imagePreview');
            const imagePreviewContainer = document.getElementById('imagePreviewContainer');
            const uploadPrompt = document.getElementById('uploadPrompt');
            const removeImageBtn = document.getElementById('removeImageBtn');
            const imageUploadArea = document.getElementById('imageUploadArea');
            const clientFileError = document.getElementById('clientFileError');


            imageFile.addEventListener('change', function(e) {
                if (this.files && this.files[0]) {
                    const file = this.files[0];

                    clientFileError.classList.add('d-none');
                    clientFileError.textContent = '';
                    if (file.size > 5 * 1024 * 1024) {
                        showClientError('File size exceeds 5MB limit');
                        this.value = '';
                        return;
                    }
                    if (!file.type.match('image.*')) {
                        showClientError('Please select an image file (JPG or PNG)');
                        this.value = '';
                        return;
                    }

                    const reader = new FileReader();
                    reader.onload = function(e) {
                        imagePreview.src = e.target.result;
                        imagePreviewContainer.classList.remove('d-none');
                        uploadPrompt.classList.add('d-none');
                    }
                    reader.readAsDataURL(file);
                } 
            });

            // Handle drag and drop
            imageUploadArea.addEventListener('dragover', function(e) {
                e.preventDefault();
                this.classList.add('border-primary');
            });

            imageUploadArea.addEventListener('dragleave', function(e) {
                e.preventDefault();
                this.classList.remove('border-primary');
            });

            imageUploadArea.addEventListener('drop', function(e) {
                e.preventDefault();
                this.classList.remove('border-primary');

                if (e.dataTransfer.files.length) {
                    imageFile.files = e.dataTransfer.files;
                    const event = new Event('change');
                    imageFile.dispatchEvent(event);
                }
            });

            // Remove image
            removeImageBtn.addEventListener('click', function() {
                imageFile.value = '';
                imagePreview.src = '';
                imagePreviewContainer.classList.add('d-none');
                uploadPrompt.classList.remove('d-none');
                clientFileError.classList.add('d-none');
                clientFileError.textContent = '';
            });

            function showClientError(message) {
                   if (imageFile.files.length > 0) {
            clientFileError.textContent = message;
            clientFileError.classList.remove('d-none');
            imageUploadArea.classList.add('border-danger');
            setTimeout(() => {
                imageUploadArea.classList.remove('border-danger');
            }, 2000);
        }
            }
        });
    </script>
}