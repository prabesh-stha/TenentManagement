@using TenentManagement.Models.Property
@model List<PropertyModel>

@{
    ViewData["Title"] = "Home Page";
}
<div class="container mt-4">

    <!-- Header Row -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Properties</h2>
        <a asp-controller="Property" asp-action="Create" asp-route-id="@Context.Session.GetInt32("UserId")" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i> Add Property
        </a>
    </div>

    <!-- Property Cards -->
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @if(Model.Count <= 0 || Model == null)
        {
            <p>No Property.</p>
        }
        else
        {
            @foreach (var property in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm border-0">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <i class="fas fa-building fa-2x text-primary me-3"></i>
                                <h5 class="card-title mb-0">@property.Name</h5>
                            </div>
                            <h6 class="card-subtitle mb-2 text-muted">@property.Address</h6>
                            <p class="card-text">@property.Description</p>
                            <p class="card-text"><small class="text-muted">Created: @property.CreatedAt.ToShortDateString()</small></p>
                            <a asp-action="Detail" asp-controller="Property" asp-route-id ="@property.Id" class="btn btn-sm btn-outline-primary">View Details</a>
                        </div>
                    </div>
                </div>
            }
        
        }
    </div>
</div>